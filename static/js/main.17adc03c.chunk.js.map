{"version":3,"sources":["services/WeatherData.js","components/WeatherMap.js","App.js","registerServiceWorker.js","index.js"],"names":["SERVICE_URL","APP_ID","WeatherMapSearch","props","context","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","assign","showMarker","latLng","info","_this","setState","search","flyTo","latlng","lat","lng","addMarker","ReactLeafletSearch","Search","withLeaflet","WeatherMap","_this2","updateMarker","_","uniqueId","id","self","assertThisInitialized","callback","$","getJSON","lon","units","appid","done","data","console","log","fail","jqxhr","textStatus","error","err","getWeather","weather","prevState","markers","clone","index","findIndex","push","handleLocationFound","e","center","state","handleClick","mapRef","React","createRef","zoom","react_default","a","createElement","className","Map","onLocationfound","onClick","ref","zoomControl","TileLayer","attribution","url","ZoomControl","position","provider","showPopup","closeResultsOnClick","WeatherMap_WeatherMarkersList","onDragend","current","leafletElement","locate","Component","WeatherMarkersList","items","map","marker","WeatherMap_WeatherMarker","key","style","display","WeatherMarker","_this3","handleDragend","target","_latlng","markerRef","Marker","draggable","Popup","WeatherMap_WeatherPopup","openPopup","prevProps","WeatherPopup","_ref","w","rows","name","value","coord","sys","country","main","description","wind","speed","deg","humidity","pressure","temp","grid_default","settings","header","App","WeatherMap_WeatherMap","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.17adc03c.chunk.js","sourcesContent":["import $ from 'jquery';\n\nconst SERVICE_URL = 'https://api.openweathermap.org/data/2.5/weather';\n\nconst APP_ID = '702a42edfe2011323fbcbe4cc46a6a41';\n\n// https://api.openweathermap.org/data/2.5/weather?lat=51.5&lon=-0.1&appid=702a42edfe2011323fbcbe4cc46a6a41\n\n\nexport default function getWeather(latlng, callback) {\n  $.getJSON(SERVICE_URL, {\n    lat: latlng.lat, \n    lon: latlng.lng, \n    units: 'metric',\n    appid: APP_ID})\n  .done((data) => {\n    console.log(\"weather\", data);\n    callback(data);\n  })\n  .fail((jqxhr, textStatus, error) => {\n    const err = textStatus + \", \" + error;\n    console.log(\"Weather service failed: \" + err);\n  });\n}","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport _ from 'lodash';\n\nimport JsonTable from 'ts-react-json-table';\n\nimport { ReactLeafletSearch } from 'react-leaflet-search';\n\nimport './WeatherMap.css';\nimport './JsonTable.css';\n\nimport {\n  Map,\n  TileLayer,\n  Marker,\n  Popup,\n  ZoomControl,\n  withLeaflet\n} from 'react-leaflet';\n\nimport getWeather from '../services/WeatherData';\n\nclass WeatherMapSearch extends ReactLeafletSearch {\n\n  constructor(props, context) {\n    super(Object.assign({ showMarker: false }, props), context);\n  }\n\n  latLngHandler(latLng, info) {\n\n    this.setState({ search: latLng, info: info }, () => {\n      this.flyTo();\n\n      const latlng = {\n        lat: latLng[0],\n        lng: latLng[1]\n      };\n\n      this.props.addMarker(latlng);\n    });\n  }\n\n  render() {\n    return null;\n  }\n}\n\nconst Search = withLeaflet(WeatherMapSearch);\n\nexport default class WeatherMap extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.mapRef = React.createRef();\n\n    this.state = {\n      markers: [],\n      center: {\n        lat: 51.505,\n        lng: -0.09,\n      },\n      zoom: 13,\n    };\n  }\n\n  render() {\n\n    return (<div className='weather-Root'>\n      <Map \n        center={this.state.center} \n        onLocationfound={this.handleLocationFound}\n        onClick={this.handleClick}\n        ref={this.mapRef}\n        zoomControl={false}\n        zoom={this.state.zoom}>\n\n        <TileLayer\n          attribution=\"&amp;copy <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <ZoomControl\n          position=\"bottomright\"\n        />\n        <Search\n          position=\"topleft\"\n          provider=\"OpenStreetMap\"\n          showMarker={true}\n          showPopup={true}\n          addMarker={this.addMarker}\n          closeResultsOnClick={true}\n        />\n        <WeatherMarkersList markers={this.state.markers} onDragend={this.updateMarker} />\n      </Map>\n    </div>)\n  }\n\n  addMarker = (latlng) => {\n    this.updateMarker(_.uniqueId('marker-'), latlng);\n  };\n\n  updateMarker = (id, latlng) => {\n    const self = this;\n    getWeather(latlng, (weather) => {\n      self.setState((prevState) => {\n        let markers = _.clone(prevState.markers);\n\n        const index = _.findIndex(markers, {id});\n        if (index !== -1) {\n          markers[index].weather = weather;\n          markers[index].latlng = latlng;\n        } else {\n          markers.push({\n            id, weather, latlng\n          });\n        }\n\n        return {\n          markers\n        };\n      });\n    });\n\n  }\n\n  handleLocationFound = (e) => {\n    this.setState({\n      center: e.latlng\n    }, () => {\n      this.addMarker(this.state.center);\n    });\n  };\n\n  handleClick = (e) => {\n    this.addMarker(e.latlng);\n  }\n\n  componentDidMount() {\n    this.mapRef.current.leafletElement.locate();\n  }\n}\n\nclass WeatherMarkersList extends Component {\n  render() {\n    const onDragend = this.props.onDragend;\n    const items = this.props.markers.map((marker) => (\n      <WeatherMarker key={marker.id} id={marker.id} latlng={marker.latlng} weather={marker.weather} onDragend={onDragend} />\n    ));\n    return <div style={{ display: 'none' }}>{items}</div>;   \n  }\n}\n\nWeatherMarkersList.propTypes = {\n  markers: PropTypes.array.isRequired,\n}\n\nclass WeatherMarker extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.markerRef = React.createRef();\n  }\n\n  render() {\n    return (\n      <Marker\n        ref={this.markerRef}\n        position={[this.props.latlng.lat, this.props.latlng.lng]}\n        draggable={true}\n        onDragend={this.handleDragend}>\n\n        <Popup className='weather-Popup'>\n          <WeatherPopup weather={this.props.weather} />\n        </Popup>\n      </Marker>\n    );\n  }\n\n  componentDidMount() {\n    this.markerRef.current.leafletElement.openPopup();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.latlng !== prevProps.latlng || this.props.weather !== prevProps.weather) {\n      this.markerRef.current.leafletElement.openPopup();\n    }\n  }\n\n  handleDragend = (e) => {\n    this.props.onDragend(this.props.id, e.target._latlng);\n  };\n}\n\nconst WeatherPopup = ({ weather }) => {\n  const w = weather;\n  const rows = [{\n    name: 'position', value: '(lat: '+w.coord.lat + ', lon: '+w.coord.lon + ')'\n  }, {\n    name: 'place', value: w.name + ' ('+ w.sys.country +')'\n  }, {\n    name: 'weather', value: w.weather[0].main + ': ' + w.weather[0].description\n  }, {\n    name: 'wind', value: 'speed (m/s): ' + w.wind.speed + (w.wind.deg ? '  direction (degrees): ' + w.wind.deg : '')\n  }, {\n    name: 'humidity (%)', value: w.main.humidity\n  }, {\n    name: 'pressure (hPa)', value: w.main.pressure\n  }, {\n    name: 'temperature (\\u2103)', value: w.main.temp\n  }];\n\n  return <JsonTable rows={rows} settings={{header: false}} />;\n};\n \n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport WeatherMap from './components/WeatherMap';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1 className=\"App-title\">Map Weather</h1>\n          <div className=\"App-help\">\n            <div>\n              <div className=\"App-help-item\"><div className=\"App-help-click\">Click on map / search location:</div> place marker with weather data</div>\n              <div className=\"App-help-item\"><div className=\"App-help-click\">Drag marker:</div> display weather data at modified location</div>\n            </div>\n          </div>\n        </header>\n        <WeatherMap />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}